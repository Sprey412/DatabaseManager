import java.io.File

fun main() {
    val dbFile = File("database.csv")
    val dbManager = DatabaseManager(dbFile)
    val backupManager = BackupManager(dbFile, File("backups"))

    while (true) {
        println("\nüìÇ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        println("1 - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
        println("2 - –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å")
        println("3 - –ù–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å")
        println("4 - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å")
        println("5 - –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å–∏")
        println("6 - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é")
        println("7 - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é")
        println("0 - –í—ã—Ö–æ–¥")

        when (readln().trim()) {
            "1" -> {
                println("–í–≤–µ–¥–∏—Ç–µ ID, –ò–º—è, –í–æ–∑—Ä–∞—Å—Ç, –¢–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:")
                val (id, name, age, phone) = readln().split(",").map { it.trim() }
                dbManager.addRecord(id, name, age, phone)
            }
            "2" -> {
                println("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
                val id = readln().trim()
                dbManager.deleteRecord(id)
            }
            "3" -> {
                println("–í–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞:")
                val query = readln().trim()
                dbManager.searchRecords(query)
            }
            "4" -> {
                println("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–ò–º—è, –í–æ–∑—Ä–∞—Å—Ç, –¢–µ–ª–µ—Ñ–æ–Ω):")
                val (id, name, age, phone) = readln().split(",").map { it.trim() }
                dbManager.editRecord(id, name, age, phone)
            }
            "5" -> {
                println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª—è –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (1 - –ò–º—è, 2 - –í–æ–∑—Ä–∞—Å—Ç, 3 - –¢–µ–ª–µ—Ñ–æ–Ω):")
                val index = readln().trim().toIntOrNull()?.minus(1)
                if (index in 1..3) dbManager.sortRecordsByField(index!!) else println("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—è.")
            }
            "6" -> backupManager.createBackup()
            "7" -> {
                println("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:")
                val backupPath = readln().trim()
                backupManager.restoreBackup(File(backupPath))
            }
            "0" -> {
                println("üëã –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.")
                return
            }
            else -> println("‚ö† –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        }
    }
}
